@model ShareSpace.Models.Booking.Booking

<style>
    option {
        background-color: #6c1b20;
    }
</style>
<link href="https://cdn.rawgit.com/mdehoog/Semantic-UI/6e6d051d47b598ebab05857545f242caf2b4b48c/dist/semantic.min.css" rel="stylesheet" type="text/css" />
<script src="https://code.jquery.com/jquery-2.1.4.js"></script>
<script src="https://cdn.rawgit.com/mdehoog/Semantic-UI/6e6d051d47b598ebab05857545f242caf2b4b48c/dist/semantic.min.js"></script>
<nav aria-label="breadcrumb" role="navigation">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/Booking/AdminBookings">Bookings</a></li>
        @if (Model == null)
        {
            <li class="breadcrumb-item active" aria-current="page">New Booking</li>
        }
        else
        {
            <li class="breadcrumb-item active" aria-current="page">Update Booking</li>
        }
    </ol>
</nav>

<header class="content__title">
    <h1>Booking</h1>
    <div class="actions">
        <a href="~/Booking/AdminBookings" class="actions__item zmdi zmdi-view-list zmdi-hc-fw" title="Back to List"></a>
        @if (Model == null)
        {
            <a href="~/Booking/InsertBooking" class="actions__item zmdi zmdi-refresh zmdi-hc-fw" title="Refresh"></a>

        }
        else
        {
            <a href="~/Booking/UpdateBooking?bookingId=@Model.BookingId" class="actions__item zmdi zmdi-refresh zmdi-hc-fw" title="Refresh"></a>

        }
    </div>
</header>

<div class="card">
    <div class="card-body">
        @using (Html.BeginForm("InsertBooking", "Booking", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(x => x.BookingId)

            <div class="form-group">
                <div class="validate-input" data-validate="Time is required" id="rangestartsm">
                    @Html.LabelFor(model => model.FromDate, new { @class = "card-body__title" })
                    @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control validate-field", type = "text", placeholder = "Check In Date" } })
                    @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="validate-input" data-validate="Time is required" id="rangeendsm">
                    @Html.LabelFor(model => model.ToDate, new { @class = "card-body__title" })
                    @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control validate-field", type = "text", placeholder = "Check In Date" } })
                    @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="validate-input" data-validate="Time is required" id="rangestart">
                    @Html.LabelFor(model => model.FromHour, new { @class = "card-body__title" })
                    @Html.EditorFor(model => model.FromHour, new { htmlAttributes = new { @class = "form-control validate-field", type = "text", placeholder = "Check In Time" } })
                    @Html.ValidationMessageFor(model => model.FromHour, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group">
                <div class="validate-input" data-validate="Time is required" id="rangeend">
                    @Html.LabelFor(model => model.ToHour, new { @class = "card-body__title" })
                    @Html.EditorFor(model => model.ToHour, new { htmlAttributes = new { @class = "form-control validate-field", type = "text", placeholder = "Check Out Time" } })
                    @Html.ValidationMessageFor(model => model.ToHour, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MaximumPerson, new { @class = "card-body__title" })
                @Html.DropDownListFor(model => model.MaximumPerson, new List<SelectListItem>
                {
                    new SelectListItem {Text = "1", Value = "1"},
                    new SelectListItem {Text = "2", Value = "2"},
                    new SelectListItem {Text = "3", Value = "3"},
                    new SelectListItem {Text = "4", Value = "4"},
                    new SelectListItem {Text = "5", Value = "5"},
                    new SelectListItem {Text = "6", Value = "6"},
                    new SelectListItem {Text = "7", Value = "7"},
                    new SelectListItem {Text = "8", Value = "8"},
                    new SelectListItem {Text = "9", Value = "9"},
                    new SelectListItem {Text = "10", Value = "10"}
                },
                    "Number of Person", new
                    {@class = "form-control ddlbg", name = "Person" }
                    )
                @Html.ValidationMessageFor(model => model.MaximumPerson, "", new { @class = "validation-text" })
            </div>

            <div class="form-group">
                <label class="card-body__title">Client Names</label>
                @Html.DropDownListFor(model => model.ClientId, ViewBag.ClientList as SelectList, "Client Names", new { @class = "form-control ddlbg" })
                @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "validation-text" })
            </div>

            <div class="form-group">
                <label class="card-body__title">Property Names</label>
                @Html.DropDownListFor(model => model.PropertyId, ViewBag.PropertyList as SelectList, "Property Name", new { @class = "form-control ddlbg" })
                @Html.ValidationMessageFor(model => model.PropertyId, "", new { @class = "validation-text" })

            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @if (Model == null)
                    {
                        <input type="submit" value="Create" class="btn btn-success" />
                    }
                    else
                    {
                        <input type="submit" value="Update" class="btn btn-success" />
                    }

                </div>
            </div>
        }
    </div>
</div>
<script>
    $('#rangestart').calendar({
        type: 'time',
        endCalendar: $('#rangeend')
    });
    $('#rangeend').calendar({
        type: 'time',
        startCalendar: $('#rangestart')
    });

    $('#rangestartsm').calendar({
        type: 'date',
        endCalendar: $('#rangeendsm')
    });
    $('#rangeendsm').calendar({
        type: 'date',
        startCalendar: $('#rangestartsm')
    });
</script>