@model ShareSpace.Models.Booking.Booking

<style>
    option {
        background-color: #6c1b20;
    }
</style>

<nav aria-label="breadcrumb" role="navigation">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/Booking/AdminBookings">Bookings</a></li>
        <li class="breadcrumb-item active" aria-current="page">New Booking</li>
    </ol>
</nav>

<header class="content__title">
    <h1>New Booking</h1>


</header>

<div class="card">
    <div class="card-body">
        @using (Html.BeginForm("InsertBooking", "Booking", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(x => x.BookingId)

            <div class="form-group">
                @Html.LabelFor(model => model.FromDate, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ToDate, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FromHour, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FromHour, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FromHour, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ToHour, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ToHour, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ToHour, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MaximumPerson, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaximumPerson, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaximumPerson, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="card-body__title">Client Names</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ClientId, ViewBag.ClientList as SelectList, "Client Names", new { @class = "form-control ddlbg" })
                    @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "validation-text" })
                </div>
            </div>

            <div class="form-group">
                <label class="card-body__title">Property Names</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.PropertyId, ViewBag.PropertyList as SelectList, "Property Name", new { @class = "form-control ddlbg" })
                    @Html.ValidationMessageFor(model => model.PropertyId, "", new { @class = "validation-text" })

                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @if (Model == null)
                    {
                        <input type="submit" value="Create" class="btn btn-success" />
                    }
                    else
                    {
                        <input type="submit" value="Update" class="btn btn-success" />
                    }

                </div>
            </div>
        }
    </div>
</div>


